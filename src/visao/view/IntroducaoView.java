/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao.view;

import visao.view.SRSTextArea.TextAreaTools;
import visao.tools.IJframe;
import entidades.entity.Introducao;
import entidades.entity.Projeto;
import java.awt.Component;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.RollbackException;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.Document;
import javax.swing.undo.UndoManager;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.Converter;
import org.jdesktop.beansbinding.ELProperty;
import visao.view.tools.Constante;

/**
 *
 * @author helcio.soares
 */
public class IntroducaoView extends javax.swing.JPanel implements IJframe {

    private Introducao introducao;
    private BindingGroup bindingGroup = new BindingGroup();
    private Projeto projeto;
    private final UndoManager undo = new UndoManager();

    /**
     * Creates new form IntroducaoView
     */
    public IntroducaoView() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SRSEDITORPU").createEntityManager();
        introducaoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT i FROM Introducao i where i.idProjeto = :pIdProjeto");
        introducaoQuery.setParameter("pIdProjeto", this.projeto);

        introducaoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : introducaoQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        objetivoField = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        escopoField = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        visaoGeralField = new javax.swing.JTextArea();

        jLabel1.setText("Objetivo:");

        objetivoField = TextAreaTools.getJtaTexto(objetivoField);

        Document doc = objetivoField.getDocument();

        doc.addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });
        objetivoField.setColumns(20);
        objetivoField.setLineWrap(true);
        objetivoField.setRows(5);
        objetivoField.setLineWrap(true);
        objetivoField.setWrapStyleWord(true);
        jScrollPane1.setViewportView(objetivoField);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1))
        );

        jLabel2.setText("Escopo:");

        escopoField = TextAreaTools.getJtaTexto(escopoField);

        Document doc1 = escopoField.getDocument();

        doc1.addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });
        escopoField.setColumns(20);
        escopoField.setLineWrap(true);
        escopoField.setRows(5);
        escopoField.setLineWrap(true);
        escopoField.setWrapStyleWord(true);
        jScrollPane2.setViewportView(escopoField);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2))
        );

        jLabel3.setText("Vis√£o geral:");

        visaoGeralField = TextAreaTools.getJtaTexto(visaoGeralField);

        Document doc2 = visaoGeralField.getDocument();

        doc2.addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent evt) {
                undo.addEdit(evt.getEdit());
            }
        });
        visaoGeralField.setColumns(20);
        visaoGeralField.setLineWrap(true);
        visaoGeralField.setRows(5);
        visaoGeralField.setLineWrap(true);
        visaoGeralField.setWrapStyleWord(true);
        jScrollPane3.setViewportView(visaoGeralField);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextArea escopoField;
    private java.util.List<entidades.entity.Introducao> introducaoList;
    private javax.persistence.Query introducaoQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea objetivoField;
    private javax.swing.JTextArea visaoGeralField;
    // End of variables declaration//GEN-END:variables

    public void binding(Object objectSource, String propertySource,
            Component componentTarget, String propertyTarget,
            Converter... converter) {

        Binding binding = makeBinding(objectSource, propertySource, componentTarget, propertyTarget);
        if (converter != null && converter.length > 0) {
            binding.setConverter(converter[0]);
        }

        bindingGroup.addBinding(binding);
    }

    public AutoBinding makeBinding(Object objectSource, String propertySource,
            Component componentTarget, String propertyTarget) {
        return Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE,
                objectSource, ELProperty.create("${" + propertySource + "}"), componentTarget,
                BeanProperty.create(propertyTarget));
    }

    @Override
    public void setProjeto(Projeto projeto, int idTipoTabela) {
        this.projeto = projeto;
        initComponents();
        try {
            if(introducaoList.size()>0)
            introducao = introducaoList.get(0);
            else{
                introducao = new Introducao();
            }
            Constante.desenharArvores("");
        } catch (Exception e) {
            introducao = null;
        }
        binding(introducao, "objetivo", objetivoField, "text");
        binding(introducao, "escopo", escopoField, "text");
        binding(introducao, "visaoGeral", visaoGeralField, "text");
        bindingGroup.bind();
        
        Editor.setTitulo(projeto.getDe() + System.getProperty("file.separator")+ "Introdu√ß√£o");
    }

    @Override
    public void validarSentenca() {
    }

    @Override
    public void incluir() {
        entidades.entity.Tabela t = new entidades.entity.Tabela();
        entityManager.getTransaction().begin();
        entityManager.persist(t);
    }

    @Override
    public void salvar() {
//        EntityManagerFactory factory = Persistence.createEntityManagerFactory("introducao");
//        EntityManager manager = factory.createEntityManager();
//        manager.getTransaction().begin();    
//        manager.persist(introducao);
//        manager.getTransaction().commit(); 
//        manager.close();

        try {
            if (entityManager.getTransaction().isActive()) {
                introducao.setIdProjeto(projeto);
                entityManager.persist(introducao);
                entityManager.getTransaction().commit();
                
            } else {
                entityManager.getTransaction().begin();
                introducao.setIdProjeto(projeto);
                entityManager.persist(introducao);
                entityManager.getTransaction().commit();
            }
        } catch (RollbackException rex) {
            System.err.println("Retornar ao c√≥digo original");
        }
    }

    @Override
    public void refresh() {
    }

    @Override
    public void deletar() {
    }

    @Override
    public void validarTodasSentenca() {
    }

}
