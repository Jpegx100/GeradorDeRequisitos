/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import JTable.CustomRenderer;
import entity.Projeto;
import java.awt.Color;
import java.awt.EventQueue;
import java.beans.Beans;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.RollbackException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import tools.LerPdfTxt;
import view.tools.IJframe;
import tools.Constante;

/**
 *
 * @author helcio.soares
 */
public class ReferenciaView extends JPanel implements IJframe {

    private Projeto projeto;

    public ReferenciaView() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SRSEDITORPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT r FROM Referencia r  where r.idProjeto = :pIdProjeto");
        query.setParameter("pIdProjeto", this.projeto);
        referenciaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        deField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomeArquivoField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, referenciaList, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${de}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeArquivo}"));
        columnBinding.setColumnName("Nome do arquivo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (evt.getValueIsAdjusting()) {
                    return;
                }
                Editor.setTitulo(projeto.getDe() + "\\Referências\\" + deField.getText());
                }
            });
            masterScrollPane.setViewportView(masterTable);
            if (masterTable.getColumnModel().getColumnCount() > 0) {
                masterTable.getColumnModel().getColumn(0).setMinWidth(780);
                masterTable.getColumnModel().getColumn(0).setPreferredWidth(800);
                masterTable.getColumnModel().getColumn(0).setMaxWidth(820);
            }

            jLabel1.setText("Descrição:");

            org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.de}"), deField, org.jdesktop.beansbinding.BeanProperty.create("text"));
            bindingGroup.addBinding(binding);
            binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deField, org.jdesktop.beansbinding.BeanProperty.create("editable"));
            bindingGroup.addBinding(binding);

            deField.addFocusListener(formListener);

            jLabel2.setText("Arquivo:");

            nomeArquivoField.setEditable(false);

            binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nomeArquivo}"), nomeArquivoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
            bindingGroup.addBinding(binding);

            nomeArquivoField.addFocusListener(formListener);

            jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/open-document-icone-6270-16.png"))); // NOI18N
            jButton1.setIconTextGap(0);

            binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
            bindingGroup.addBinding(binding);

            jButton1.addFocusListener(formListener);
            jButton1.addActionListener(formListener);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(deField)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(nomeArquivoField, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(deField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(nomeArquivoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addGap(0, 62, Short.MAX_VALUE))
            );

            bindingGroup.bind();
        }

        // Code for dispatching events from components to event handlers.

        private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener {
            FormListener() {}
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (evt.getSource() == jButton1) {
                    ReferenciaView.this.jButton1ActionPerformed(evt);
                }
            }

            public void focusGained(java.awt.event.FocusEvent evt) {
                if (evt.getSource() == deField) {
                    ReferenciaView.this.deFieldFocusGained(evt);
                }
                else if (evt.getSource() == nomeArquivoField) {
                    ReferenciaView.this.deFieldFocusGained(evt);
                }
                else if (evt.getSource() == jButton1) {
                    ReferenciaView.this.deFieldFocusGained(evt);
                }
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
            }
        }// </editor-fold>//GEN-END:initComponents

    private void deFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deFieldFocusGained
        if (!entityManager.getTransaction().isActive()) {
            entityManager.getTransaction().begin();
        }
    }//GEN-LAST:event_deFieldFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] ext = {"pdf", "txt"};
        String textoLido = "";

        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Arquivos *.pdf *.txt", ext);
        JFileChooser fc;
        fc = new JFileChooser();
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(null);

        if (returnVal == 0) {
            File sourceFileName = fc.getSelectedFile();
            nomeArquivoField.setText(sourceFileName.getName());
            File targetFile = new File(Constante.DIRETORIO + sourceFileName.getName());
            try {
                Constante.copyFile(sourceFileName, targetFile);
            } catch (IOException ex) {
                Logger.getLogger(ReferenciaView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deField;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField nomeArquivoField;
    private javax.persistence.Query query;
    private java.util.List<entity.Referencia> referenciaList;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReferenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReferenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReferenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReferenciaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new ReferenciaView());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    @Override
    public void setProjeto(Projeto projeto, int idTipoTabela) {
        this.projeto = projeto;
        initComponents();
        Color bg = masterTable.getSelectionBackground();
        CustomRenderer cr = new CustomRenderer(masterTable.getDefaultRenderer(Object.class), bg);
        //Constante.desenharArvores("");
        if (masterTable.getModel().getRowCount() > 0) {
            masterTable.setRowSelectionInterval(0, 0);
        }

    }

    @Override
    public void validarSentenca() {

    }

    @Override
    public void incluir() {
        entity.Referencia t = new entity.Referencia();
        entityManager.getTransaction().begin();
        t.setIdProjeto(this.projeto);
        entityManager.persist(t);
        referenciaList.add(t);
        int row = referenciaList.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }

    @Override
    public void salvar() {
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<entity.Referencia> merged = new ArrayList<entity.Referencia>(referenciaList.size());
            for (entity.Referencia t : referenciaList) {
                merged.add(entityManager.merge(t));
            }
            referenciaList.clear();
            referenciaList.addAll(merged);
        }
    }

    @Override
    public void refresh() {
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        referenciaList.clear();
        referenciaList.addAll(data);
    }

    @Override
    public void deletar() {
        int[] selected = masterTable.getSelectedRows();
        if (!entityManager.getTransaction().isActive()) {
            entityManager.getTransaction().begin();
        }
        entity.Referencia t = referenciaList.get(masterTable.convertRowIndexToModel(selected[0]));
        try {
            int resultado = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja apagar a Referência o registro?", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (resultado == JOptionPane.YES_OPTION) {
                entityManager.remove(t);
                entityManager.getTransaction().commit();
                referenciaList.remove(t);
            } else {
                return;
            }
        } catch (javax.persistence.RollbackException e) {
            JOptionPane.showMessageDialog(null, "Projeto nao pode ser deletado!");
        }
        if (selected[0] > referenciaList.size() - 1) {
            masterTable.setRowSelectionInterval(referenciaList.size() - 1, referenciaList.size() - 1);
        } else {
            masterTable.setRowSelectionInterval(selected[0], selected[0]);
        }
    }

    @Override
    public void validarTodasSentenca() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
